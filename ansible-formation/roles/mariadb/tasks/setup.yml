---
# Clean MariaDB installation tasks
- name: Install MariaDB and required packages
  ansible.builtin.apt:
    name:
      - mariadb-server
      - mariadb-client
      - python3-pymysql
    state: present
    update_cache: yes

- name: Start MariaDB service
  ansible.builtin.service:
    name: mariadb
    state: started
    enabled: yes

- name: Wait for MariaDB to be ready
  ansible.builtin.wait_for:
    port: 3306
    host: 127.0.0.1
    timeout: 30

- name: Configure MariaDB to accept external connections
  ansible.builtin.replace:
    path: /etc/mysql/mariadb.conf.d/50-server.cnf
    regexp: '^bind-address\s*=\s*127\.0\.0\.1'
    replace: 'bind-address = 0.0.0.0'
    backup: yes
  register: mariadb_config

- name: Restart MariaDB if config changed
  ansible.builtin.service:
    name: mariadb
    state: restarted
  when: mariadb_config.changed

- name: Wait for MariaDB restart
  ansible.builtin.wait_for:
    port: 3306
    host: 0.0.0.0
    timeout: 30
  when: mariadb_config.changed

- name: Create application database
  community.mysql.mysql_db:
    name: "{{ db_app_name }}"
    state: present
    login_user: root
    login_password: ""
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create application database user
  community.mysql.mysql_user:
    name: "{{ db_app_user }}"
    password: "{{ db_app_pass }}"
    priv: "{{ db_app_name }}.*:ALL"
    host: "%"
    state: present
    login_user: root
    login_password: ""
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create users table
  community.mysql.mysql_query:
    login_db: "{{ db_app_name }}"
    login_user: "{{ db_app_user }}"
    login_password: "{{ db_app_pass }}"
    query: |
      CREATE TABLE IF NOT EXISTS users (
        id INT AUTO_INCREMENT PRIMARY KEY,
        username VARCHAR(50) UNIQUE NOT NULL,
        password_hash VARCHAR(255) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      ) ENGINE=InnoDB;

- name: Verify database connection
  ansible.builtin.shell: |
    mysql -h 0.0.0.0 -u "{{ db_app_user }}" -p"{{ db_app_pass }}" "{{ db_app_name }}" -e "SHOW TABLES;"
  register: db_test
  changed_when: false

- name: Show database test result
  ansible.builtin.debug:
    msg: "Database connection test: {{ 'SUCCESS' if db_test.rc == 0 else 'FAILED' }}"