version: '3.8'

services:
  web1:
    image: ubuntu:24.04
    container_name: ansible-web1
    command: bash -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y python3 && tail -f /dev/null"
    hostname: web1
    networks:
      - private-network

  web2:
    image: ubuntu:24.04
    container_name: ansible-web2
    command: bash -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y python3 && tail -f /dev/null"
    hostname: web2
    networks:
      - private-network

  web3:
    image: ubuntu:24.04
    container_name: ansible-web3
    command: bash -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y python3 && tail -f /dev/null"
    hostname: web3
    networks:
      - private-network

  web4:
    image: ubuntu:24.04
    container_name: ansible-web4
    command: bash -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y python3 && tail -f /dev/null"
    hostname: web4
    networks:
      - private-network  

  web5:
    image: ubuntu:24.04
    container_name: ansible-web5
    command: bash -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y python3 && tail -f /dev/null"
    hostname: web5
    networks:
      - private-network

  web6:
    image: ubuntu:24.04
    container_name: ansible-web6
    command: bash -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y python3 && tail -f /dev/null"
    hostname: web6
    networks:
      - private-network  

  db1:
    image: ubuntu:24.04
    container_name: ansible-db1
    command: bash -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y python3 && tail -f /dev/null"
    hostname: db1
    networks:
      - private-network

  lb1:
    image: ubuntu:24.04
    container_name: ansible-lb1
    command: bash -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y python3 && tail -f /dev/null"
    hostname: lb1
    networks:
      - private-network
    ports:
      - "8080:80"

networks:
  private-network:
    driver: bridge
